{"version":3,"file":"static/js/265.be2dc20d.chunk.js","mappings":"8MAKaA,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAAC,KAAD,UACGF,EAASG,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAChC,OACE,eAAaC,MAAO,CAAEC,MAAO,KAA7B,UACE,UAAC,KAAD,CAAMC,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMX,GAA1C,WACE,gBACEY,IACEN,EAAW,yCAC2BA,GAD3B,+FAIbO,IAAKV,GAAgBE,EACrBG,MAAM,SAEF,cAAGD,MAAO,CAAEO,MAAO,oBAAqBC,YAAa,OAAQC,SAAU,OAAQC,WAAY,QAA3F,SAAsGd,GAAgBE,QAXvHD,EAeZ,OAIR,C,qHC7BKc,EAAeC,EAAAA,GAAAA,IAAH,4SAgBZC,EAAaD,EAAAA,GAAAA,KAAH,8KAUVE,EAAYF,EAAAA,GAAAA,OAAH,4iBAmBTG,EAAcH,EAAAA,GAAAA,MAAH,6MAYXI,EAAcJ,EAAAA,GAAAA,MAAH,2P,6CCnDF,SAASK,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4CF,EAAAA,EAAAA,UAAS,IAArD,eAAOG,EAAP,KAAuBC,EAAvB,KAmCA,OAdAC,EAAAA,EAAAA,YAAU,WACHP,EAAaQ,IAAI,WAItBC,EAAAA,EAAAA,IAAgBT,EAAaQ,IAAI,UAAUE,MAAK,SAAAC,GAC9CL,EAAkBK,EAAKC,QACxB,GACF,GAAE,CAACZ,EAAcG,KAOhB,iCACE,SAACX,EAAD,WACE,UAACE,EAAD,CAAYmB,SA7BI,SAAAC,GACpBA,EAAMC,iBAEDZ,EAAMa,OAKXf,EAAgB,CAAEE,MAAOA,IAJvBc,EAAAA,OAAAA,QAAe,cAKlB,EAoBK,WACE,SAACtB,EAAD,CAAWuB,KAAK,SAAhB,UACE,SAACtB,EAAD,wBAGF,SAACC,EAAD,CACEqB,KAAK,OACLvC,KAAK,QACLwC,MAAOhB,EACPiB,aAAa,MACbC,SA5CW,SAAAP,GACnBV,EAASU,EAAMQ,OAAOH,MACrB,EA2COI,WAAS,EACTC,YAAY,sBAKH,OAAdnB,QAAc,IAAdA,GAAAA,EAAgBoB,QAAS,SAACrD,EAAA,EAAD,CAAUC,SAAUgC,KAAqB,0BAGxE,C","sources":["components/FilmList/FilmList.jsx","pages/Searchbar.styles.js","pages/Searchbar.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { List } from '../SharedLayout/SharedLayout.styled';\nimport { PropTypes } from 'prop-types';\n\n\nexport const FilmList = ({ filmList }) => {\n  const location = useLocation();\n    \n  return (\n    <>\n      <List>\n        {filmList.map(({ title, id, name, poster_path }) => {\n          return (\n            <li key={id} style={{ width: 230 }}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : `https://www.publicdomainpictures.net/pictures/280000/velka/not-found-image-15383864787lu.jpg`\n                  }\n                  alt={title ? title : name}\n                  width=\"230\"\n                />\n                      <p style={{ color: \"rgb(255, 121, 62)\", paddingLeft: \"10px\", fontSize: \"16px\", fontWeight: \"bold\"} }>{title ? title : name}</p>\n              </Link>\n            </li>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nFilmList.propTypes = {\n  filmList: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};","import styled from 'styled-components';\n\n\nconst SearchHeader = styled.div`\n  top: 0;\n  left: 0;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: transparent;\n`;\n\nconst SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nconst SearchBtn = styled.button`\n  display: inline-block;\n  width: 37px;\n  height: 37px;\n  background-image: url('https://upload.wikimedia.org/wikipedia/commons/thumb/d/de/OOjs_UI_icon_search-ltr.svg/1200px-OOjs_UI_icon_search-ltr.svg.png');\n  background-size: 60%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n    background-color: rgb(255, 121, 62);\n    border-color: rgb(255, 121, 62);\n  }\n`;\n\nconst SearchLabel = styled.label`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nconst SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  padding: 5px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport { SearchHeader, SearchBtn, SearchForm, SearchLabel, SearchInput };","import { useEffect, useState } from 'react';\nimport { SearchHeader, SearchBtn, SearchForm, SearchLabel, SearchInput } from '../pages/Searchbar.styles';\nimport { FilmList } from '../components/FilmList/FilmList';\nimport { useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { getSearchMovies } from '../API/api-services';\n\n\n\nexport default function Searchbar() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [query, setQuery] = useState('');\n  const [searchFilmList, setSearchFilmList] = useState([]);\n    \n\n\n  const handlerInput = event => {\n    setQuery(event.target.value);\n    };\n\n\n  const handlerSubmit = event => {\n    event.preventDefault();\n\n    if (!query.trim()) {\n      Notify.failure('Empty query');\n      return;\n      }\n      \n    setSearchParams({ query: query });\n  };\n    \n\n  useEffect(() => {\n    if (!searchParams.get('query')) {\n      return;\n      }\n      \n    getSearchMovies(searchParams.get('query')).then(data => {\n      setSearchFilmList(data.results);\n    });\n  }, [searchParams, query]);\n    \n    \n\n  \n\n  return (\n    <>\n      <SearchHeader>\n        <SearchForm onSubmit={handlerSubmit}>\n          <SearchBtn type=\"submit\">\n            <SearchLabel>Search</SearchLabel>\n          </SearchBtn>\n\n          <SearchInput\n            type=\"text\"\n            name=\"query\"\n            value={query}\n            autoComplete=\"off\"\n            onChange={handlerInput}\n            autoFocus\n            placeholder=\"Search movie\"\n                  />\n                  \n        </SearchForm>\n      </SearchHeader>\n      {searchFilmList?.length ? <FilmList filmList={searchFilmList} /> : <></>}\n    </>\n  );\n}"],"names":["FilmList","filmList","location","useLocation","map","title","id","name","poster_path","style","width","to","state","from","src","alt","color","paddingLeft","fontSize","fontWeight","SearchHeader","styled","SearchForm","SearchBtn","SearchLabel","SearchInput","Searchbar","useSearchParams","searchParams","setSearchParams","useState","query","setQuery","searchFilmList","setSearchFilmList","useEffect","get","getSearchMovies","then","data","results","onSubmit","event","preventDefault","trim","Notify","type","value","autoComplete","onChange","target","autoFocus","placeholder","length"],"sourceRoot":""}